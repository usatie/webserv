# Provides the configuration file context in which the HTTP server directives are specified.
# http://nginx.org/en/docs/http/ngx_http_core_module.html#http
# Syntax:	http { ... }
# Default:	—
# Context:	main
http {
	# Sets configuration for a virtual server.
	# Syntax:	server { ... }
	# Default:	—
	# Context:	http
	# http://nginx.org/en/docs/http/ngx_http_core_module.html#server
	# There is no clear separation between IP-based (based on the IP address) and name-based (based on the “Host” request header field) virtual servers. Instead, the listen directives describe all addresses and ports that should accept connections for the server, and the server_name directive lists all server names.
	server {
		# Sets the address and port for IP, or the path for a UNIX-domain socket on which the server will accept requests.
		# Syntax:	listen address[:port] [default_server] [ssl] [http2 | quic] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];
		# listen port [default_server] [ssl] [http2 | quic] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];
		# listen unix:path [default_server] [ssl] [http2 | quic] [proxy_protocol] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];
		# Default:	listen *:80 | *:8000;
		# Context:	server
		# http://nginx.org/en/docs/http/ngx_http_core_module.html#listen
		listen		8181;
		listen		192.168.1.1:8181;

		# Sets names of a virtual server.
		# Syntax:	server_name name ...;
		# Default:	server_name "";
		# Context:	server
		# http://nginx.org/en/docs/http/ngx_http_core_module.html#server_name
		# Memo: 1. server_name can be multiple names separated by spaces.
		#       2. server_name directive can be used multiple times.
		server_name  webserv1;
		server_name	example.com www.example.com;

		# Sets configuration depending on a request URI.
		# Syntax:	location [ = | ~ | ~* | ^~ ] uri { ... }
		# 			location @name { ... }
		# Default:	—
		# Context:	server, location
		# https://nginx.org/en/docs/http/ngx_http_core_module.html#location
		location / {
			root ./html;
		}

		# Sets the root directory for requests
		# Syntax:	root path;
		# Default:	root html;
		# Context:	http, server, location, if in location
		# http://nginx.org/en/docs/http/ngx_http_core_module.html#root
		location /root/ {
			# on request of "/root/a.text", the file ./html/root/a.text will be sent.
			root ./html;
		}

		# Defines a replacement for the specified location.
		# Syntax:	alias path;
		# Default:	—
		# Context:	location
		# http://nginx.org/en/docs/http/ngx_http_core_module.html#alias
		location /alias/ {
			# on request of "/alias/a.text", the file ./html/a.text will be sent.
			alias ./html/;
		}
		location /kapouet {
			# on request of "/kapouet/pouic/toto/pouet", the file /tmp/www/pouic/toto/pouet will be sent.
			alias /tmp/www;
		}

		# Defines files that will be used as an index.
		# Syntax:	index file ...;
		# Default:	index index.html;
		# Context:	http, server, location
		# http://nginx.org/en/docs/http/ngx_http_index_module.html
		location /index/ {
			root ./html;
			# on request of "/index/", the file ./html/index/index.html or ./html/index/index.html will be sent.
			index index.html index.html; 
		}

		# Defines the URI that will be shown for the specified errors. A uri value can contain variables.
		# Syntax:	error_page code ... [=[response]] uri;
		# Default:	—
		# Context:	http, server, location, if in location
		# http://nginx.org/en/docs/http/ngx_http_core_module.html#error_page
		location /error_page/ {
			root ./html;
			error_page	404              /404.html;
			error_page	500 502 503 504  /50x.html;
		}

		# Limits allowed HTTP methods inside a location.
		# Syntax:	limit_except method ... { ... }
		# Default:	—
		# Context:	location
		# https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_except
		location /limit_except/ {
			root ./html;
			# Allow GET and POST
			limit_except GET POST;
			#limit_except GET POST {
			#	allow 192.168.1.0/32;
			#	deny  all;
			#}
		}

		# Enables or disables the directory listing output.
		# Syntax:	autoindex on | off;
		# Default:	autoindex off;
		# Context:	http, server, location
		# http://nginx.org/en/docs/http/ngx_http_autoindex_module.html
		location /autoindex/ {
			root ./html;
			autoindex on;
		}

		# Stops processing and returns the specified code to a client.
		# Syntax:	return code [text];
		# 			return code URL;
		# 			return URL;
		# Default:	—
		# Context:	server, location, if
		# http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return
		location /redirect/ {
			return 301 http://google.com;
		}

		# Specifies a directory to which output files will be saved to.
		# Syntax:	upload_store <directory> [<level 1> [<level 2> ] … ]
		# Default:	none
		# Context:	server,location
		# https://www.nginx.com/resources/wiki/modules/upload/#upload-store
		location /upload/ {
			# If a request has a method other than POST, the module returns error 405 (Method not allowed).
			upload_store ./html/upload;
		}

		# Sets the maximum allowed size of the client request body.
		# Syntax:	client_max_body_size size;
		# Default:	client_max_body_size 1m;
		# Context:	http, server, location
		# https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
		location /client_max_body_size/ {
			root ./html;
			client_max_body_size 1m;
		}
		# Only file which size is less than 1MB can be uploaded.
		location /upload/limit {
			upload_store ./html/upload;
			client_max_body_size 1m;
		}

		# <<ORIGINAL directive not in nginx>>
		# Specifies certain file extensions to execute CGI
		# Syntax:	cgi_extension extension ...;
		# Default:	none
		# Context:	server, location
		location /cgi/ {
			root ./html;
			cgi_extension .php .pl;
		}
	}

	# Sets configuration for another virtual server.
	server {
		listen		8181;
		server_name	webserv2;

		location / {
			root	./html/webserv2;
			index	hello.html;
		}
	}
}
