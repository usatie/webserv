struct in_addr {
	in_addr_t s_addr; /* unsigned 32-bit integer */
};


// IPv4 socket addresses
struct sockaddr_in {
	sa_family_t		sin_family;	/* Address family (AF_INET) */
	in_port_t		sin_port;	/* Port number */
	struct in_addr	sin_addr;	/* IPv4 address */
	unsigned char	_pad[X];	/* Pad to size of 'sockaddr'
								   structure (16 bytes) */
};

// IPv6 socket addresses
struct in6_addr {
	uint8_t s6_addr[16]; /* 16 bytes == 128 bits */
};

struct sockaddr_in6 {
	sa_family_t sin6_family;	/* Address family (AF_INET6) */
	in_port_t	sin6_port;		/* Port number */
	uint32_t	sin6_flowinfo;	/* IPv6 flow information */
	struct in6_addr	sin6_addr;	/* IPv6 address */
	uint32_t	sin6_scope_id;	/* Scope ID (new in kernel 2.4) */
};

// sockaddr_storage
#define __ss_aligntype uint32_t	/* On 32-bit architectures */
struct sockaddr_storage {
	sa_family_t	ss_family;
	__ss_aligntype	__ss_align; 		/* Force alignment */
	char	__ss_padding[SS_PADSIZE];	/* Pad to 128 bytes */
};
